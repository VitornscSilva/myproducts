{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "MyProducts API",
    "description": "API documentation for MyProducts application",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "/api/",
      "description": "API"
    }
  ],
  "tags": [
    {
      "name": "Utils"
    },
    {
      "name": "Products"
    },
    {
      "name": "Auth"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "paths": {
    "/products": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "redeems the product list",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Cats"
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "BearerAuth": []
          }        
        ],
        "tags": [
          "Products"
        ],
        "summary": "create a new product",
        "requestBody": {
          "description": "Product Object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/Product"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/id"
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/products/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of the product that we want to match",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "redeem a product with given ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Product with id",
            "schema": {
              "$ref": "#/definitions/id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "404": {
            "description": "Failed. Product not found."
          }
        }
      },
      "put": {
        "summary": "update a product with given ID",
        "tags": [
          "Products"
        ],
        "requestBody": {
          "description": "Product Object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/Product"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Product with new values of properties",
            "schema": {
              "$ref": "#/definitions/id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          },
          "404": {
            "description": "Failed. Product not found."
          }
        }
      },
      "delete": {
        "summary": "excludes a product with given ID",
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Delete product with id",
            "schema": {
              "$ref": "#/definitions/id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/id"
            }
          },
          "404": {
            "description": "Failed. Product not found."
          }
        }
      }
    },
    "/auth": {
      "get": {
        "tags": ["Auth"],
        "summary": "retrieve users",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuthenticationInfo"
            }
          }
        }
      }
    },
    "/auth/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of the authentication information to retrieve",
          "type": "string"
        }
      ],
      "get": {
        "tags": ["Auth"],
        "summary": "retrieve user by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Authentication information ID",
            "schema": {
              "$ref": "#/definitions/id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuthenticationInfo"
            }
          },
          "404": {
            "description": "Failed. Authentication information not found."
          }
        }
      }
    },
    "/auth/signin": {
      "post": {
        "tags": ["Auth"],
        "summary": "sign in with authentication credentials",
        "requestBody": {
          "description": "Authentication Credentials Object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/AuthenticationCredentials"
              }
            }
          }
        },
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuthenticationResponse"
            }
          },
          "401": {
            "description": "Failed. Unauthorized."
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "register a new authentication user",
        "requestBody": {
          "description": "Authentication User Object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/AuthenticationUser"
              }
            }
          }
        },
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuthenticationResponse"
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "BearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "definitions": {
    "id": {
      "properties": {
        "uuid": {
          "type": "string"
        }
      }
    },
    "AuthenticationCredentials": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "AuthenticationUser": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "Product": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "price": {
          "type": "number"
        }
      }
    },
    "Products": {
      "type": "object",
      "properties": {
        "products": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Product"
          }
        }
      }
    }
  }
}
